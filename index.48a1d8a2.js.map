{"mappings":"gBAmBAA,EAAe,CAAEC,eAlBjB,SAAwBC,GACtB,OAAOC,MACL,GAAmBC,OAHN,kCAGD,SAAeA,OAARF,EAAQ,oDAC3BG,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,MCAdC,EAAO,CACXC,KAAMC,SAASC,cAAc,eAC7BC,YAAaF,SAASC,cAAc,iBACpCE,YAAaH,SAASC,cAAc,kBAyFtC,SAASG,IACPN,EAAKK,YAAYE,UAAY,GAC7BP,EAAKI,YAAYG,UAAY,E,CAxF/BP,EAAKC,KAAKO,iBAAiB,QAASC,UAEpC,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAcF,EAAEG,OAAOC,MAAMC,OACnC,IAAKH,EAEH,YADAN,IAMFjB,EAAIC,eAAesB,GAChBlB,MAAK,SAAAsB,GAEJ,IAAMZ,EAAcY,EAAUC,KAAI,SAAA1B,G,OAAWA,EAAQ2B,KAAKC,Q,IAGtDf,EAAYgB,OAAS,GACvBC,SAASC,OAAOC,KACd,8DAG8B,IAAvBnB,EAAYgB,OAgB7B,SAA2BJ,GACzB,IAAMQ,EAASR,EACZC,KACC,SAAAQ,G,MAAe,sGAIbhC,OAD+BgC,EAAYC,MAAMC,IAAI,WAGnBlC,OAFlCgC,EAAYP,KAAKC,SAClB,gFAMK1B,OAL8BgC,EAAYP,KAAKC,SAAS,gJAUxD1B,OALAgC,EAAYG,QACb,mHAQqDnC,OAJpDgC,EAAYI,WACb,yHAKYpC,OAFyCqC,OAAOC,OAC3DN,EAAYO,WACZC,KAAK,MAAM,6D,IAKlBA,KAAK,IAERjC,EAAKK,YAAY6B,mBAAmB,YAAaV,E,CA/C3CW,CAAkBnB,GACTZ,EAAYgB,QAAU,GAAKhB,EAAYgB,QAAU,IAgDlE,SAA2BJ,GACzB,IAAMQ,EAASR,EACZC,KACC,SAAAQ,G,MAAe,4EAEiDhC,OAA/BgC,EAAYC,MAAMC,IAAI,WACnBlC,OAD4BgC,EAAYP,KAAKC,SAAS,gFAC5B1B,OAA1BgC,EAAYP,KAAKC,SAAS,wB,IAG/Dc,KAAK,IACRjC,EAAKI,YAAY8B,mBAAmB,YAAaV,E,CAzD3CY,CAAkBpB,E,IAGrBqB,OAAM,SAAAC,GACiB,QAAlBA,EAAMC,SACRlB,SAASC,OAAOkB,QAAQ,2C,IAK9BlC,G,GA7CqB,K","sources":["src/js/fetchCountries.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://restcountries.com/v3.1/';\nfunction fetchCountries(country) {\n  return fetch(\n    `${BASE_URL}name/${country}?fields=name,capital,population,flags,languages`\n  ).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.status);\n    }\n    return responce.json();\n    // console.log(responce.json());\n  });\n  // .then(countries => {\n  //   console.log(countries);\n  // })\n  // .catch(error => {\n  //   console.log(error);\n  // });\n}\n\nexport default { fetchCountries };\n","import './css/styles.css';\n//========\n// import Notiflix from 'notiflix';\n// import debounce from 'lodash.debounce';\nimport API from './js/fetchCountries';\n//========\nconst DEBOUNCE_DELAY = 300;\n\nconst refs = {\n  form: document.querySelector('#search-box'),\n  countryList: document.querySelector('.country-list'),\n  countryInfo: document.querySelector('.country-info'),\n};\n\nrefs.form.addEventListener('input', debounce(onSubmitForm, DEBOUNCE_DELAY));\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const countryName = e.target.value.trim();\n  if (!countryName) {\n    deleteCountriesInfo();\n    return;\n  }\n  // console.log(countryName); // counntry entered in field\n  // API.fetchCountries(countryName); // передаємо назву країни з інпут на бекенд\n\n  API.fetchCountries(countryName)\n    .then(countries => {\n      // console.log(countries); // massive of objects [{},{},{}]\n      const countryList = countries.map(country => country.name.official);\n      // console.log(countryList); // massive official names of countries [UA, UK, JU]\n\n      if (countryList.length > 10) {\n        Notiflix.Notify.info(\n          'Too many matches found. Please enter a more specific name.'\n        ); // do not perform function fetchCountries\n        return;\n      } else if (countryList.length === 1) {\n        createCountryCard(countries); // show card\n      } else if (countryList.length >= 2 && countryList.length <= 10) {\n        createCountryList(countries); // show list of countries\n      }\n    })\n    .catch(error => {\n      if (error.message === '404') {\n        Notiflix.Notify.failure('Oops, there is no country with that name');\n      }\n      // console.dir(error);\n    });\n\n  deleteCountriesInfo();\n}\n\nfunction createCountryCard(countries) {\n  const markup = countries\n    .map(\n      countryItem => `\n      <div class='card'>\n        <div class='card-title'>\n          <img class='card-img' src='${countryItem.flags.svg}' alt='${\n        countryItem.name.official\n      }' height=\"20px\" width=\"40px\" />\n          <h2 class='card-country-name'>${countryItem.name.official}</h2>\n        </div>\n        <ul class='card-body'>\n          <li class=''>\n          <p><span class='card-description'>Capital:</span> ${\n            countryItem.capital\n          }</p>\n          </li>\n          <li class=''>\n          <p><span class='card-description'>Population:</span> ${\n            countryItem.population\n          }</p>\n                </li>\n           <li class=''>\n          <p><span class='card-description'>Languages:</span> ${Object.values(\n            countryItem.languages\n          ).join(', ')}</p>\n            </li>\n           </ul>\n         </div>`\n    )\n    .join('');\n\n  refs.countryInfo.insertAdjacentHTML('beforeend', markup);\n}\nfunction createCountryList(countries) {\n  const markup = countries\n    .map(\n      countryItem => `\n        <div class='card-title'>\n          <img class='card-img' src='${countryItem.flags.svg}' alt='${countryItem.name.official}' height=\"20px\" width=\"40px\" />\n          <h2 class='card-country-name'>${countryItem.name.official}</h2>\n        </div>`\n    )\n    .join('');\n  refs.countryList.insertAdjacentHTML('beforeend', markup);\n}\nfunction deleteCountriesInfo() {\n  refs.countryInfo.innerHTML = '';\n  refs.countryList.innerHTML = '';\n}\n"],"names":["$57dba802a44d0066$export$2e2bcd8739ae039","fetchCountries","country","fetch","concat","then","responce","ok","Error","status","json","$b8f9b7833fa37166$var$refs","form","document","querySelector","countryList","countryInfo","$b8f9b7833fa37166$var$deleteCountriesInfo","innerHTML","addEventListener","debounce","e","preventDefault","countryName","target","value","trim","countries","map","name","official","length","Notiflix","Notify","info","markup","countryItem","flags","svg","capital","population","Object","values","languages","join","insertAdjacentHTML","$b8f9b7833fa37166$var$createCountryCard","$b8f9b7833fa37166$var$createCountryList","catch","error","message","failure"],"version":3,"file":"index.48a1d8a2.js.map"}